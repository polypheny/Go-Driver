//
//Messages related to relational frames as used to represent the results form the relational model.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: polyprism/relational_frame.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The RelationalFrame message encapsulates the structure of a relational frame, which includes metadata about columns and rows of data within a relational table.
// This structure is essential for representing the schema and data of a table in a structured format, facilitating data manipulation and query operations.
type RelationalFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A collection of metadata about each column in the frame.
	// This provides details such as index, nullability, length, precision, and type information, defining the schema of the table represented by the relational frame.
	ColumnMeta []*ColumnMeta `protobuf:"bytes,1,rep,name=column_meta,json=columnMeta,proto3" json:"column_meta,omitempty"`
	// The rows of data within the frame.
	// Each row consists of a series of ProtoValue objects representing the values in the row, mirroring the actual data stored in the table's rows according to the schema defined by the column metadata.
	Rows []*Row `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *RelationalFrame) Reset() {
	*x = RelationalFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polyprism_relational_frame_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelationalFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelationalFrame) ProtoMessage() {}

func (x *RelationalFrame) ProtoReflect() protoreflect.Message {
	mi := &file_polyprism_relational_frame_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelationalFrame.ProtoReflect.Descriptor instead.
func (*RelationalFrame) Descriptor() ([]byte, []int) {
	return file_polyprism_relational_frame_proto_rawDescGZIP(), []int{0}
}

func (x *RelationalFrame) GetColumnMeta() []*ColumnMeta {
	if x != nil {
		return x.ColumnMeta
	}
	return nil
}

func (x *RelationalFrame) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

// The ColumnMeta message holds metadata related to a specific column within a relational table.
type ColumnMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index of the column within the table.
	ColumnIndex int32 `protobuf:"varint,1,opt,name=column_index,json=columnIndex,proto3" json:"column_index,omitempty"`
	// Indicates whether the column can contain null values.
	IsNullable bool `protobuf:"varint,2,opt,name=is_nullable,json=isNullable,proto3" json:"is_nullable,omitempty"`
	// The length of the column values.
	Length int32 `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	// Label associated with the column, if any.
	ColumnLabel string `protobuf:"bytes,4,opt,name=column_label,json=columnLabel,proto3" json:"column_label,omitempty"`
	// Name of the column.
	ColumnName string `protobuf:"bytes,5,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// Precision of the column, usually for numerical values.
	Precision int32 `protobuf:"varint,6,opt,name=precision,proto3" json:"precision,omitempty"`
	// Name of the entity that the column represents.
	EntityName string `protobuf:"bytes,7,opt,name=entity_name,json=entityName,proto3" json:"entity_name,omitempty"`
	// Name of the schema that the column belongs to.
	SchemaName string `protobuf:"bytes,8,opt,name=schema_name,json=schemaName,proto3" json:"schema_name,omitempty"`
	// Metadata describing the type of the column.
	TypeMeta *TypeMeta `protobuf:"bytes,9,opt,name=type_meta,json=typeMeta,proto3" json:"type_meta,omitempty"`
	// Scale of the column, typically for numerical values.
	Scale int32 `protobuf:"varint,10,opt,name=scale,proto3" json:"scale,omitempty"`
	// Namespace the column resides in.
	Namespace string `protobuf:"bytes,11,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *ColumnMeta) Reset() {
	*x = ColumnMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polyprism_relational_frame_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnMeta) ProtoMessage() {}

func (x *ColumnMeta) ProtoReflect() protoreflect.Message {
	mi := &file_polyprism_relational_frame_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnMeta.ProtoReflect.Descriptor instead.
func (*ColumnMeta) Descriptor() ([]byte, []int) {
	return file_polyprism_relational_frame_proto_rawDescGZIP(), []int{1}
}

func (x *ColumnMeta) GetColumnIndex() int32 {
	if x != nil {
		return x.ColumnIndex
	}
	return 0
}

func (x *ColumnMeta) GetIsNullable() bool {
	if x != nil {
		return x.IsNullable
	}
	return false
}

func (x *ColumnMeta) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *ColumnMeta) GetColumnLabel() string {
	if x != nil {
		return x.ColumnLabel
	}
	return ""
}

func (x *ColumnMeta) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *ColumnMeta) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *ColumnMeta) GetEntityName() string {
	if x != nil {
		return x.EntityName
	}
	return ""
}

func (x *ColumnMeta) GetSchemaName() string {
	if x != nil {
		return x.SchemaName
	}
	return ""
}

func (x *ColumnMeta) GetTypeMeta() *TypeMeta {
	if x != nil {
		return x.TypeMeta
	}
	return nil
}

func (x *ColumnMeta) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *ColumnMeta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The FieldMeta message provides metadata for individual fields, which can be part of complex structures like arrays or structs.
type FieldMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Index of the field within its containing structure.
	FieldIndex int32 `protobuf:"varint,1,opt,name=field_index,json=fieldIndex,proto3" json:"field_index,omitempty"`
	// Indicates whether the field can contain null values.
	IsNullable bool `protobuf:"varint,2,opt,name=is_nullable,json=isNullable,proto3" json:"is_nullable,omitempty"`
	// Length of the fieldâ€™s value.
	Length int32 `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	// Name of the field.
	FieldName string `protobuf:"bytes,4,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	// Precision of the field, usually for numerical values.
	Precision int32 `protobuf:"varint,6,opt,name=precision,proto3" json:"precision,omitempty"`
	// Metadata describing the type of the field.
	TypeMeta *TypeMeta `protobuf:"bytes,9,opt,name=type_meta,json=typeMeta,proto3" json:"type_meta,omitempty"`
	// Scale of the field, typically for numerical values.
	Scale int32 `protobuf:"varint,10,opt,name=scale,proto3" json:"scale,omitempty"`
}

func (x *FieldMeta) Reset() {
	*x = FieldMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polyprism_relational_frame_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMeta) ProtoMessage() {}

func (x *FieldMeta) ProtoReflect() protoreflect.Message {
	mi := &file_polyprism_relational_frame_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMeta.ProtoReflect.Descriptor instead.
func (*FieldMeta) Descriptor() ([]byte, []int) {
	return file_polyprism_relational_frame_proto_rawDescGZIP(), []int{2}
}

func (x *FieldMeta) GetFieldIndex() int32 {
	if x != nil {
		return x.FieldIndex
	}
	return 0
}

func (x *FieldMeta) GetIsNullable() bool {
	if x != nil {
		return x.IsNullable
	}
	return false
}

func (x *FieldMeta) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *FieldMeta) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *FieldMeta) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *FieldMeta) GetTypeMeta() *TypeMeta {
	if x != nil {
		return x.TypeMeta
	}
	return nil
}

func (x *FieldMeta) GetScale() int32 {
	if x != nil {
		return x.Scale
	}
	return 0
}

// The TypeMeta message is a comprehensive descriptor for the data types used within the system.
// This message not only defines simple data types but also accommodates complex types such as structures and arrays.
// Its flexibility allows it to describe a wide range of data types and data structures.
type TypeMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Represents the fundamental data type of the value. This can be any basic data type depending on the definitions within ProtoValue.ProtoValueType.
	ProtoValueType ProtoPolyType `protobuf:"varint,1,opt,name=proto_value_type,json=protoValueType,proto3,enum=polypheny.protointerface.ProtoPolyType" json:"proto_value_type,omitempty"`
	// If the proto_value_type indicates a structure, this field provides the metadata for that structure. Contains details about the fields within the structure. This field will be absent for non-structured types.
	StructMeta *StructMeta `protobuf:"bytes,2,opt,name=struct_meta,json=structMeta,proto3,oneof" json:"struct_meta,omitempty"`
	// If the proto_value_type indicates an array, this field provides metadata about the type of elements within the array. This field will be absent for non-array types.
	ArrayMeta *ArrayMeta `protobuf:"bytes,3,opt,name=array_meta,json=arrayMeta,proto3,oneof" json:"array_meta,omitempty"`
}

func (x *TypeMeta) Reset() {
	*x = TypeMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polyprism_relational_frame_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeMeta) ProtoMessage() {}

func (x *TypeMeta) ProtoReflect() protoreflect.Message {
	mi := &file_polyprism_relational_frame_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeMeta.ProtoReflect.Descriptor instead.
func (*TypeMeta) Descriptor() ([]byte, []int) {
	return file_polyprism_relational_frame_proto_rawDescGZIP(), []int{3}
}

func (x *TypeMeta) GetProtoValueType() ProtoPolyType {
	if x != nil {
		return x.ProtoValueType
	}
	return ProtoPolyType_UNSPECIFIED
}

func (x *TypeMeta) GetStructMeta() *StructMeta {
	if x != nil {
		return x.StructMeta
	}
	return nil
}

func (x *TypeMeta) GetArrayMeta() *ArrayMeta {
	if x != nil {
		return x.ArrayMeta
	}
	return nil
}

// The StructMeta message provides metadata specific to structured types, giving details about the fields that make up the structure.
type StructMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A collection of metadata entries, one for each field within the structure.
	// Each FieldMeta provides details like the fieldâ€™s name, type, nullability, etc.
	FieldMetas []*FieldMeta `protobuf:"bytes,1,rep,name=field_metas,json=fieldMetas,proto3" json:"field_metas,omitempty"`
}

func (x *StructMeta) Reset() {
	*x = StructMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polyprism_relational_frame_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StructMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructMeta) ProtoMessage() {}

func (x *StructMeta) ProtoReflect() protoreflect.Message {
	mi := &file_polyprism_relational_frame_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructMeta.ProtoReflect.Descriptor instead.
func (*StructMeta) Descriptor() ([]byte, []int) {
	return file_polyprism_relational_frame_proto_rawDescGZIP(), []int{4}
}

func (x *StructMeta) GetFieldMetas() []*FieldMeta {
	if x != nil {
		return x.FieldMetas
	}
	return nil
}

// The ArrayMeta message provides metadata about array types, detailing the kind of elements they can hold.
type ArrayMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// TypeMeta 	This field describes the type of elements contained within the array.
	// It uses the TypeMeta message, meaning an array can contain any data type, including nested arrays or structures.
	ElementType *TypeMeta `protobuf:"bytes,1,opt,name=element_type,json=elementType,proto3" json:"element_type,omitempty"`
}

func (x *ArrayMeta) Reset() {
	*x = ArrayMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polyprism_relational_frame_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayMeta) ProtoMessage() {}

func (x *ArrayMeta) ProtoReflect() protoreflect.Message {
	mi := &file_polyprism_relational_frame_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayMeta.ProtoReflect.Descriptor instead.
func (*ArrayMeta) Descriptor() ([]byte, []int) {
	return file_polyprism_relational_frame_proto_rawDescGZIP(), []int{5}
}

func (x *ArrayMeta) GetElementType() *TypeMeta {
	if x != nil {
		return x.ElementType
	}
	return nil
}

// The Row message represents a single row within a relational frame.
type Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The values within the row, represented as a series of ProtoValue objects.
	Values []*ProtoValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Row) Reset() {
	*x = Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_polyprism_relational_frame_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_polyprism_relational_frame_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_polyprism_relational_frame_proto_rawDescGZIP(), []int{6}
}

func (x *Row) GetValues() []*ProtoValue {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_polyprism_relational_frame_proto protoreflect.FileDescriptor

var file_polyprism_relational_frame_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2f, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x18, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0x15, 0x70, 0x6f,
	0x6c, 0x79, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x31,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x22, 0x81, 0x03, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x75, 0x6c, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x3f, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x75, 0x6c,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c,
	0x65, 0x22, 0x91, 0x02, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x51,
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70,
	0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6f, 0x6c, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a,
	0x0a, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x01, 0x52, 0x09, 0x61, 0x72, 0x72, 0x61, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70,
	0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x22, 0x52, 0x0a, 0x09, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0c, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x0b, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x43, 0x0a,
	0x03, 0x52, 0x6f, 0x77, 0x12, 0x3c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x42, 0x3b, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68,
	0x65, 0x6e, 0x79, 0x2e, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x10, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x01, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_polyprism_relational_frame_proto_rawDescOnce sync.Once
	file_polyprism_relational_frame_proto_rawDescData = file_polyprism_relational_frame_proto_rawDesc
)

func file_polyprism_relational_frame_proto_rawDescGZIP() []byte {
	file_polyprism_relational_frame_proto_rawDescOnce.Do(func() {
		file_polyprism_relational_frame_proto_rawDescData = protoimpl.X.CompressGZIP(file_polyprism_relational_frame_proto_rawDescData)
	})
	return file_polyprism_relational_frame_proto_rawDescData
}

var file_polyprism_relational_frame_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_polyprism_relational_frame_proto_goTypes = []interface{}{
	(*RelationalFrame)(nil), // 0: polypheny.protointerface.RelationalFrame
	(*ColumnMeta)(nil),      // 1: polypheny.protointerface.ColumnMeta
	(*FieldMeta)(nil),       // 2: polypheny.protointerface.FieldMeta
	(*TypeMeta)(nil),        // 3: polypheny.protointerface.TypeMeta
	(*StructMeta)(nil),      // 4: polypheny.protointerface.StructMeta
	(*ArrayMeta)(nil),       // 5: polypheny.protointerface.ArrayMeta
	(*Row)(nil),             // 6: polypheny.protointerface.Row
	(ProtoPolyType)(0),      // 7: polypheny.protointerface.ProtoPolyType
	(*ProtoValue)(nil),      // 8: polypheny.protointerface.ProtoValue
}
var file_polyprism_relational_frame_proto_depIdxs = []int32{
	1,  // 0: polypheny.protointerface.RelationalFrame.column_meta:type_name -> polypheny.protointerface.ColumnMeta
	6,  // 1: polypheny.protointerface.RelationalFrame.rows:type_name -> polypheny.protointerface.Row
	3,  // 2: polypheny.protointerface.ColumnMeta.type_meta:type_name -> polypheny.protointerface.TypeMeta
	3,  // 3: polypheny.protointerface.FieldMeta.type_meta:type_name -> polypheny.protointerface.TypeMeta
	7,  // 4: polypheny.protointerface.TypeMeta.proto_value_type:type_name -> polypheny.protointerface.ProtoPolyType
	4,  // 5: polypheny.protointerface.TypeMeta.struct_meta:type_name -> polypheny.protointerface.StructMeta
	5,  // 6: polypheny.protointerface.TypeMeta.array_meta:type_name -> polypheny.protointerface.ArrayMeta
	2,  // 7: polypheny.protointerface.StructMeta.field_metas:type_name -> polypheny.protointerface.FieldMeta
	3,  // 8: polypheny.protointerface.ArrayMeta.element_type:type_name -> polypheny.protointerface.TypeMeta
	8,  // 9: polypheny.protointerface.Row.values:type_name -> polypheny.protointerface.ProtoValue
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_polyprism_relational_frame_proto_init() }
func file_polyprism_relational_frame_proto_init() {
	if File_polyprism_relational_frame_proto != nil {
		return
	}
	file_polyprism_value_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_polyprism_relational_frame_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelationalFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polyprism_relational_frame_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polyprism_relational_frame_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polyprism_relational_frame_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polyprism_relational_frame_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StructMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polyprism_relational_frame_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_polyprism_relational_frame_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_polyprism_relational_frame_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_polyprism_relational_frame_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_polyprism_relational_frame_proto_goTypes,
		DependencyIndexes: file_polyprism_relational_frame_proto_depIdxs,
		MessageInfos:      file_polyprism_relational_frame_proto_msgTypes,
	}.Build()
	File_polyprism_relational_frame_proto = out.File
	file_polyprism_relational_frame_proto_rawDesc = nil
	file_polyprism_relational_frame_proto_goTypes = nil
	file_polyprism_relational_frame_proto_depIdxs = nil
}
