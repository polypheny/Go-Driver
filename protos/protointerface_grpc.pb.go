// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.24.3
// source: polyprism/protointerface.proto

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ProtoInterfaceClient is the client API for ProtoInterface service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ProtoInterfaceClient interface {
	// Meta functions
	GetDbmsVersion(ctx context.Context, in *DbmsVersionRequest, opts ...grpc.CallOption) (*DbmsVersionResponse, error)
	GetSupportedLanguages(ctx context.Context, in *LanguageRequest, opts ...grpc.CallOption) (*LanguageResponse, error)
	GetDatabases(ctx context.Context, in *DatabasesRequest, opts ...grpc.CallOption) (*DatabasesResponse, error)
	GetTableTypes(ctx context.Context, in *TableTypesRequest, opts ...grpc.CallOption) (*TableTypesResponse, error)
	GetTypes(ctx context.Context, in *TypesRequest, opts ...grpc.CallOption) (*TypesResponse, error)
	GetUserDefinedTypes(ctx context.Context, in *UserDefinedTypesRequest, opts ...grpc.CallOption) (*UserDefinedTypesResponse, error)
	GetClientInfoPropertyMetas(ctx context.Context, in *ClientInfoPropertyMetaRequest, opts ...grpc.CallOption) (*ClientInfoPropertyMetaResponse, error)
	SearchProcedures(ctx context.Context, in *ProceduresRequest, opts ...grpc.CallOption) (*ProceduresResponse, error)
	SearchFunctions(ctx context.Context, in *FunctionsRequest, opts ...grpc.CallOption) (*FunctionsResponse, error)
	SearchNamespaces(ctx context.Context, in *NamespacesRequest, opts ...grpc.CallOption) (*NamespacesResponse, error)
	GetNamespace(ctx context.Context, in *NamespaceRequest, opts ...grpc.CallOption) (*Namespace, error)
	SearchEntities(ctx context.Context, in *EntitiesRequest, opts ...grpc.CallOption) (*EntitiesResponse, error)
	GetSqlStringFunctions(ctx context.Context, in *SqlStringFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error)
	GetSqlSystemFunctions(ctx context.Context, in *SqlSystemFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error)
	GetSqlTimeDateFunctions(ctx context.Context, in *SqlTimeDateFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error)
	GetSqlNumericFunctions(ctx context.Context, in *SqlNumericFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error)
	GetSqlKeywords(ctx context.Context, in *SqlKeywordsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error)
	// Connection related
	Connect(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*ConnectionResponse, error)
	CheckConnection(ctx context.Context, in *ConnectionCheckRequest, opts ...grpc.CallOption) (*ConnectionCheckResponse, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error)
	GetClientInfoProperties(ctx context.Context, in *ClientInfoPropertiesRequest, opts ...grpc.CallOption) (*ClientInfoProperties, error)
	SetClientInfoProperties(ctx context.Context, in *ClientInfoProperties, opts ...grpc.CallOption) (*ClientInfoPropertiesResponse, error)
	// Unparameterized statements
	ExecuteUnparameterizedStatement(ctx context.Context, in *ExecuteUnparameterizedStatementRequest, opts ...grpc.CallOption) (ProtoInterface_ExecuteUnparameterizedStatementClient, error)
	ExecuteUnparameterizedStatementBatch(ctx context.Context, in *ExecuteUnparameterizedStatementBatchRequest, opts ...grpc.CallOption) (ProtoInterface_ExecuteUnparameterizedStatementBatchClient, error)
	// Prepared Statements
	PrepareIndexedStatement(ctx context.Context, in *PrepareStatementRequest, opts ...grpc.CallOption) (*PreparedStatementSignature, error)
	ExecuteIndexedStatement(ctx context.Context, in *ExecuteIndexedStatementRequest, opts ...grpc.CallOption) (*StatementResult, error)
	ExecuteIndexedStatementBatch(ctx context.Context, in *ExecuteIndexedStatementBatchRequest, opts ...grpc.CallOption) (*StatementBatchResponse, error)
	PrepareNamedStatement(ctx context.Context, in *PrepareStatementRequest, opts ...grpc.CallOption) (*PreparedStatementSignature, error)
	ExecuteNamedStatement(ctx context.Context, in *ExecuteNamedStatementRequest, opts ...grpc.CallOption) (*StatementResult, error)
	// ExecuteNamedStatementBatch ?
	// Results
	FetchResult(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*Frame, error)
	// Transaction handling
	CloseStatement(ctx context.Context, in *CloseStatementRequest, opts ...grpc.CallOption) (*CloseStatementResponse, error)
	CommitTransaction(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
	RollbackTransaction(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackResponse, error)
	// Properties
	UpdateConnectionProperties(ctx context.Context, in *ConnectionPropertiesUpdateRequest, opts ...grpc.CallOption) (*ConnectionPropertiesUpdateResponse, error)
}

type protoInterfaceClient struct {
	cc grpc.ClientConnInterface
}

func NewProtoInterfaceClient(cc grpc.ClientConnInterface) ProtoInterfaceClient {
	return &protoInterfaceClient{cc}
}

func (c *protoInterfaceClient) GetDbmsVersion(ctx context.Context, in *DbmsVersionRequest, opts ...grpc.CallOption) (*DbmsVersionResponse, error) {
	out := new(DbmsVersionResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetDbmsVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetSupportedLanguages(ctx context.Context, in *LanguageRequest, opts ...grpc.CallOption) (*LanguageResponse, error) {
	out := new(LanguageResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetSupportedLanguages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetDatabases(ctx context.Context, in *DatabasesRequest, opts ...grpc.CallOption) (*DatabasesResponse, error) {
	out := new(DatabasesResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetDatabases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetTableTypes(ctx context.Context, in *TableTypesRequest, opts ...grpc.CallOption) (*TableTypesResponse, error) {
	out := new(TableTypesResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetTableTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetTypes(ctx context.Context, in *TypesRequest, opts ...grpc.CallOption) (*TypesResponse, error) {
	out := new(TypesResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetUserDefinedTypes(ctx context.Context, in *UserDefinedTypesRequest, opts ...grpc.CallOption) (*UserDefinedTypesResponse, error) {
	out := new(UserDefinedTypesResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetUserDefinedTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetClientInfoPropertyMetas(ctx context.Context, in *ClientInfoPropertyMetaRequest, opts ...grpc.CallOption) (*ClientInfoPropertyMetaResponse, error) {
	out := new(ClientInfoPropertyMetaResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetClientInfoPropertyMetas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) SearchProcedures(ctx context.Context, in *ProceduresRequest, opts ...grpc.CallOption) (*ProceduresResponse, error) {
	out := new(ProceduresResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/SearchProcedures", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) SearchFunctions(ctx context.Context, in *FunctionsRequest, opts ...grpc.CallOption) (*FunctionsResponse, error) {
	out := new(FunctionsResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/SearchFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) SearchNamespaces(ctx context.Context, in *NamespacesRequest, opts ...grpc.CallOption) (*NamespacesResponse, error) {
	out := new(NamespacesResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/SearchNamespaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetNamespace(ctx context.Context, in *NamespaceRequest, opts ...grpc.CallOption) (*Namespace, error) {
	out := new(Namespace)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetNamespace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) SearchEntities(ctx context.Context, in *EntitiesRequest, opts ...grpc.CallOption) (*EntitiesResponse, error) {
	out := new(EntitiesResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/SearchEntities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetSqlStringFunctions(ctx context.Context, in *SqlStringFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error) {
	out := new(MetaStringResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetSqlStringFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetSqlSystemFunctions(ctx context.Context, in *SqlSystemFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error) {
	out := new(MetaStringResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetSqlSystemFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetSqlTimeDateFunctions(ctx context.Context, in *SqlTimeDateFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error) {
	out := new(MetaStringResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetSqlTimeDateFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetSqlNumericFunctions(ctx context.Context, in *SqlNumericFunctionsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error) {
	out := new(MetaStringResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetSqlNumericFunctions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetSqlKeywords(ctx context.Context, in *SqlKeywordsRequest, opts ...grpc.CallOption) (*MetaStringResponse, error) {
	out := new(MetaStringResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetSqlKeywords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) Connect(ctx context.Context, in *ConnectionRequest, opts ...grpc.CallOption) (*ConnectionResponse, error) {
	out := new(ConnectionResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) CheckConnection(ctx context.Context, in *ConnectionCheckRequest, opts ...grpc.CallOption) (*ConnectionCheckResponse, error) {
	out := new(ConnectionCheckResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/CheckConnection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error) {
	out := new(DisconnectResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) GetClientInfoProperties(ctx context.Context, in *ClientInfoPropertiesRequest, opts ...grpc.CallOption) (*ClientInfoProperties, error) {
	out := new(ClientInfoProperties)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/GetClientInfoProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) SetClientInfoProperties(ctx context.Context, in *ClientInfoProperties, opts ...grpc.CallOption) (*ClientInfoPropertiesResponse, error) {
	out := new(ClientInfoPropertiesResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/SetClientInfoProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) ExecuteUnparameterizedStatement(ctx context.Context, in *ExecuteUnparameterizedStatementRequest, opts ...grpc.CallOption) (ProtoInterface_ExecuteUnparameterizedStatementClient, error) {
	stream, err := c.cc.NewStream(ctx, &ProtoInterface_ServiceDesc.Streams[0], "/polypheny.protointerface.ProtoInterface/ExecuteUnparameterizedStatement", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoInterfaceExecuteUnparameterizedStatementClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProtoInterface_ExecuteUnparameterizedStatementClient interface {
	Recv() (*StatementResponse, error)
	grpc.ClientStream
}

type protoInterfaceExecuteUnparameterizedStatementClient struct {
	grpc.ClientStream
}

func (x *protoInterfaceExecuteUnparameterizedStatementClient) Recv() (*StatementResponse, error) {
	m := new(StatementResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoInterfaceClient) ExecuteUnparameterizedStatementBatch(ctx context.Context, in *ExecuteUnparameterizedStatementBatchRequest, opts ...grpc.CallOption) (ProtoInterface_ExecuteUnparameterizedStatementBatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &ProtoInterface_ServiceDesc.Streams[1], "/polypheny.protointerface.ProtoInterface/ExecuteUnparameterizedStatementBatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoInterfaceExecuteUnparameterizedStatementBatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProtoInterface_ExecuteUnparameterizedStatementBatchClient interface {
	Recv() (*StatementBatchResponse, error)
	grpc.ClientStream
}

type protoInterfaceExecuteUnparameterizedStatementBatchClient struct {
	grpc.ClientStream
}

func (x *protoInterfaceExecuteUnparameterizedStatementBatchClient) Recv() (*StatementBatchResponse, error) {
	m := new(StatementBatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoInterfaceClient) PrepareIndexedStatement(ctx context.Context, in *PrepareStatementRequest, opts ...grpc.CallOption) (*PreparedStatementSignature, error) {
	out := new(PreparedStatementSignature)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/PrepareIndexedStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) ExecuteIndexedStatement(ctx context.Context, in *ExecuteIndexedStatementRequest, opts ...grpc.CallOption) (*StatementResult, error) {
	out := new(StatementResult)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/ExecuteIndexedStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) ExecuteIndexedStatementBatch(ctx context.Context, in *ExecuteIndexedStatementBatchRequest, opts ...grpc.CallOption) (*StatementBatchResponse, error) {
	out := new(StatementBatchResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/ExecuteIndexedStatementBatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) PrepareNamedStatement(ctx context.Context, in *PrepareStatementRequest, opts ...grpc.CallOption) (*PreparedStatementSignature, error) {
	out := new(PreparedStatementSignature)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/PrepareNamedStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) ExecuteNamedStatement(ctx context.Context, in *ExecuteNamedStatementRequest, opts ...grpc.CallOption) (*StatementResult, error) {
	out := new(StatementResult)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/ExecuteNamedStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) FetchResult(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*Frame, error) {
	out := new(Frame)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/FetchResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) CloseStatement(ctx context.Context, in *CloseStatementRequest, opts ...grpc.CallOption) (*CloseStatementResponse, error) {
	out := new(CloseStatementResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/CloseStatement", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) CommitTransaction(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/CommitTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) RollbackTransaction(ctx context.Context, in *RollbackRequest, opts ...grpc.CallOption) (*RollbackResponse, error) {
	out := new(RollbackResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/RollbackTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoInterfaceClient) UpdateConnectionProperties(ctx context.Context, in *ConnectionPropertiesUpdateRequest, opts ...grpc.CallOption) (*ConnectionPropertiesUpdateResponse, error) {
	out := new(ConnectionPropertiesUpdateResponse)
	err := c.cc.Invoke(ctx, "/polypheny.protointerface.ProtoInterface/UpdateConnectionProperties", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProtoInterfaceServer is the server API for ProtoInterface service.
// All implementations must embed UnimplementedProtoInterfaceServer
// for forward compatibility
type ProtoInterfaceServer interface {
	// Meta functions
	GetDbmsVersion(context.Context, *DbmsVersionRequest) (*DbmsVersionResponse, error)
	GetSupportedLanguages(context.Context, *LanguageRequest) (*LanguageResponse, error)
	GetDatabases(context.Context, *DatabasesRequest) (*DatabasesResponse, error)
	GetTableTypes(context.Context, *TableTypesRequest) (*TableTypesResponse, error)
	GetTypes(context.Context, *TypesRequest) (*TypesResponse, error)
	GetUserDefinedTypes(context.Context, *UserDefinedTypesRequest) (*UserDefinedTypesResponse, error)
	GetClientInfoPropertyMetas(context.Context, *ClientInfoPropertyMetaRequest) (*ClientInfoPropertyMetaResponse, error)
	SearchProcedures(context.Context, *ProceduresRequest) (*ProceduresResponse, error)
	SearchFunctions(context.Context, *FunctionsRequest) (*FunctionsResponse, error)
	SearchNamespaces(context.Context, *NamespacesRequest) (*NamespacesResponse, error)
	GetNamespace(context.Context, *NamespaceRequest) (*Namespace, error)
	SearchEntities(context.Context, *EntitiesRequest) (*EntitiesResponse, error)
	GetSqlStringFunctions(context.Context, *SqlStringFunctionsRequest) (*MetaStringResponse, error)
	GetSqlSystemFunctions(context.Context, *SqlSystemFunctionsRequest) (*MetaStringResponse, error)
	GetSqlTimeDateFunctions(context.Context, *SqlTimeDateFunctionsRequest) (*MetaStringResponse, error)
	GetSqlNumericFunctions(context.Context, *SqlNumericFunctionsRequest) (*MetaStringResponse, error)
	GetSqlKeywords(context.Context, *SqlKeywordsRequest) (*MetaStringResponse, error)
	// Connection related
	Connect(context.Context, *ConnectionRequest) (*ConnectionResponse, error)
	CheckConnection(context.Context, *ConnectionCheckRequest) (*ConnectionCheckResponse, error)
	Disconnect(context.Context, *DisconnectRequest) (*DisconnectResponse, error)
	GetClientInfoProperties(context.Context, *ClientInfoPropertiesRequest) (*ClientInfoProperties, error)
	SetClientInfoProperties(context.Context, *ClientInfoProperties) (*ClientInfoPropertiesResponse, error)
	// Unparameterized statements
	ExecuteUnparameterizedStatement(*ExecuteUnparameterizedStatementRequest, ProtoInterface_ExecuteUnparameterizedStatementServer) error
	ExecuteUnparameterizedStatementBatch(*ExecuteUnparameterizedStatementBatchRequest, ProtoInterface_ExecuteUnparameterizedStatementBatchServer) error
	// Prepared Statements
	PrepareIndexedStatement(context.Context, *PrepareStatementRequest) (*PreparedStatementSignature, error)
	ExecuteIndexedStatement(context.Context, *ExecuteIndexedStatementRequest) (*StatementResult, error)
	ExecuteIndexedStatementBatch(context.Context, *ExecuteIndexedStatementBatchRequest) (*StatementBatchResponse, error)
	PrepareNamedStatement(context.Context, *PrepareStatementRequest) (*PreparedStatementSignature, error)
	ExecuteNamedStatement(context.Context, *ExecuteNamedStatementRequest) (*StatementResult, error)
	// ExecuteNamedStatementBatch ?
	// Results
	FetchResult(context.Context, *FetchRequest) (*Frame, error)
	// Transaction handling
	CloseStatement(context.Context, *CloseStatementRequest) (*CloseStatementResponse, error)
	CommitTransaction(context.Context, *CommitRequest) (*CommitResponse, error)
	RollbackTransaction(context.Context, *RollbackRequest) (*RollbackResponse, error)
	// Properties
	UpdateConnectionProperties(context.Context, *ConnectionPropertiesUpdateRequest) (*ConnectionPropertiesUpdateResponse, error)
	mustEmbedUnimplementedProtoInterfaceServer()
}

// UnimplementedProtoInterfaceServer must be embedded to have forward compatible implementations.
type UnimplementedProtoInterfaceServer struct {
}

func (UnimplementedProtoInterfaceServer) GetDbmsVersion(context.Context, *DbmsVersionRequest) (*DbmsVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDbmsVersion not implemented")
}
func (UnimplementedProtoInterfaceServer) GetSupportedLanguages(context.Context, *LanguageRequest) (*LanguageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSupportedLanguages not implemented")
}
func (UnimplementedProtoInterfaceServer) GetDatabases(context.Context, *DatabasesRequest) (*DatabasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDatabases not implemented")
}
func (UnimplementedProtoInterfaceServer) GetTableTypes(context.Context, *TableTypesRequest) (*TableTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTableTypes not implemented")
}
func (UnimplementedProtoInterfaceServer) GetTypes(context.Context, *TypesRequest) (*TypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTypes not implemented")
}
func (UnimplementedProtoInterfaceServer) GetUserDefinedTypes(context.Context, *UserDefinedTypesRequest) (*UserDefinedTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserDefinedTypes not implemented")
}
func (UnimplementedProtoInterfaceServer) GetClientInfoPropertyMetas(context.Context, *ClientInfoPropertyMetaRequest) (*ClientInfoPropertyMetaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClientInfoPropertyMetas not implemented")
}
func (UnimplementedProtoInterfaceServer) SearchProcedures(context.Context, *ProceduresRequest) (*ProceduresResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchProcedures not implemented")
}
func (UnimplementedProtoInterfaceServer) SearchFunctions(context.Context, *FunctionsRequest) (*FunctionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchFunctions not implemented")
}
func (UnimplementedProtoInterfaceServer) SearchNamespaces(context.Context, *NamespacesRequest) (*NamespacesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchNamespaces not implemented")
}
func (UnimplementedProtoInterfaceServer) GetNamespace(context.Context, *NamespaceRequest) (*Namespace, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNamespace not implemented")
}
func (UnimplementedProtoInterfaceServer) SearchEntities(context.Context, *EntitiesRequest) (*EntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchEntities not implemented")
}
func (UnimplementedProtoInterfaceServer) GetSqlStringFunctions(context.Context, *SqlStringFunctionsRequest) (*MetaStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSqlStringFunctions not implemented")
}
func (UnimplementedProtoInterfaceServer) GetSqlSystemFunctions(context.Context, *SqlSystemFunctionsRequest) (*MetaStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSqlSystemFunctions not implemented")
}
func (UnimplementedProtoInterfaceServer) GetSqlTimeDateFunctions(context.Context, *SqlTimeDateFunctionsRequest) (*MetaStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSqlTimeDateFunctions not implemented")
}
func (UnimplementedProtoInterfaceServer) GetSqlNumericFunctions(context.Context, *SqlNumericFunctionsRequest) (*MetaStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSqlNumericFunctions not implemented")
}
func (UnimplementedProtoInterfaceServer) GetSqlKeywords(context.Context, *SqlKeywordsRequest) (*MetaStringResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSqlKeywords not implemented")
}
func (UnimplementedProtoInterfaceServer) Connect(context.Context, *ConnectionRequest) (*ConnectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (UnimplementedProtoInterfaceServer) CheckConnection(context.Context, *ConnectionCheckRequest) (*ConnectionCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckConnection not implemented")
}
func (UnimplementedProtoInterfaceServer) Disconnect(context.Context, *DisconnectRequest) (*DisconnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (UnimplementedProtoInterfaceServer) GetClientInfoProperties(context.Context, *ClientInfoPropertiesRequest) (*ClientInfoProperties, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClientInfoProperties not implemented")
}
func (UnimplementedProtoInterfaceServer) SetClientInfoProperties(context.Context, *ClientInfoProperties) (*ClientInfoPropertiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetClientInfoProperties not implemented")
}
func (UnimplementedProtoInterfaceServer) ExecuteUnparameterizedStatement(*ExecuteUnparameterizedStatementRequest, ProtoInterface_ExecuteUnparameterizedStatementServer) error {
	return status.Errorf(codes.Unimplemented, "method ExecuteUnparameterizedStatement not implemented")
}
func (UnimplementedProtoInterfaceServer) ExecuteUnparameterizedStatementBatch(*ExecuteUnparameterizedStatementBatchRequest, ProtoInterface_ExecuteUnparameterizedStatementBatchServer) error {
	return status.Errorf(codes.Unimplemented, "method ExecuteUnparameterizedStatementBatch not implemented")
}
func (UnimplementedProtoInterfaceServer) PrepareIndexedStatement(context.Context, *PrepareStatementRequest) (*PreparedStatementSignature, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrepareIndexedStatement not implemented")
}
func (UnimplementedProtoInterfaceServer) ExecuteIndexedStatement(context.Context, *ExecuteIndexedStatementRequest) (*StatementResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteIndexedStatement not implemented")
}
func (UnimplementedProtoInterfaceServer) ExecuteIndexedStatementBatch(context.Context, *ExecuteIndexedStatementBatchRequest) (*StatementBatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteIndexedStatementBatch not implemented")
}
func (UnimplementedProtoInterfaceServer) PrepareNamedStatement(context.Context, *PrepareStatementRequest) (*PreparedStatementSignature, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrepareNamedStatement not implemented")
}
func (UnimplementedProtoInterfaceServer) ExecuteNamedStatement(context.Context, *ExecuteNamedStatementRequest) (*StatementResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteNamedStatement not implemented")
}
func (UnimplementedProtoInterfaceServer) FetchResult(context.Context, *FetchRequest) (*Frame, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FetchResult not implemented")
}
func (UnimplementedProtoInterfaceServer) CloseStatement(context.Context, *CloseStatementRequest) (*CloseStatementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseStatement not implemented")
}
func (UnimplementedProtoInterfaceServer) CommitTransaction(context.Context, *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitTransaction not implemented")
}
func (UnimplementedProtoInterfaceServer) RollbackTransaction(context.Context, *RollbackRequest) (*RollbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RollbackTransaction not implemented")
}
func (UnimplementedProtoInterfaceServer) UpdateConnectionProperties(context.Context, *ConnectionPropertiesUpdateRequest) (*ConnectionPropertiesUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateConnectionProperties not implemented")
}
func (UnimplementedProtoInterfaceServer) mustEmbedUnimplementedProtoInterfaceServer() {}

// UnsafeProtoInterfaceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProtoInterfaceServer will
// result in compilation errors.
type UnsafeProtoInterfaceServer interface {
	mustEmbedUnimplementedProtoInterfaceServer()
}

func RegisterProtoInterfaceServer(s grpc.ServiceRegistrar, srv ProtoInterfaceServer) {
	s.RegisterService(&ProtoInterface_ServiceDesc, srv)
}

func _ProtoInterface_GetDbmsVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DbmsVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetDbmsVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetDbmsVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetDbmsVersion(ctx, req.(*DbmsVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetSupportedLanguages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LanguageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetSupportedLanguages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetSupportedLanguages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetSupportedLanguages(ctx, req.(*LanguageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetDatabases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetDatabases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetDatabases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetDatabases(ctx, req.(*DatabasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetTableTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetTableTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetTableTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetTableTypes(ctx, req.(*TableTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetTypes(ctx, req.(*TypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetUserDefinedTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDefinedTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetUserDefinedTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetUserDefinedTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetUserDefinedTypes(ctx, req.(*UserDefinedTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetClientInfoPropertyMetas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientInfoPropertyMetaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetClientInfoPropertyMetas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetClientInfoPropertyMetas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetClientInfoPropertyMetas(ctx, req.(*ClientInfoPropertyMetaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_SearchProcedures_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProceduresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).SearchProcedures(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/SearchProcedures",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).SearchProcedures(ctx, req.(*ProceduresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_SearchFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FunctionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).SearchFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/SearchFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).SearchFunctions(ctx, req.(*FunctionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_SearchNamespaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamespacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).SearchNamespaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/SearchNamespaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).SearchNamespaces(ctx, req.(*NamespacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetNamespace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NamespaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetNamespace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetNamespace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetNamespace(ctx, req.(*NamespaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_SearchEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).SearchEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/SearchEntities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).SearchEntities(ctx, req.(*EntitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetSqlStringFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlStringFunctionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetSqlStringFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetSqlStringFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetSqlStringFunctions(ctx, req.(*SqlStringFunctionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetSqlSystemFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlSystemFunctionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetSqlSystemFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetSqlSystemFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetSqlSystemFunctions(ctx, req.(*SqlSystemFunctionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetSqlTimeDateFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlTimeDateFunctionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetSqlTimeDateFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetSqlTimeDateFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetSqlTimeDateFunctions(ctx, req.(*SqlTimeDateFunctionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetSqlNumericFunctions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlNumericFunctionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetSqlNumericFunctions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetSqlNumericFunctions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetSqlNumericFunctions(ctx, req.(*SqlNumericFunctionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetSqlKeywords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlKeywordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetSqlKeywords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetSqlKeywords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetSqlKeywords(ctx, req.(*SqlKeywordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).Connect(ctx, req.(*ConnectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_CheckConnection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).CheckConnection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/CheckConnection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).CheckConnection(ctx, req.(*ConnectionCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).Disconnect(ctx, req.(*DisconnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_GetClientInfoProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientInfoPropertiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).GetClientInfoProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/GetClientInfoProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).GetClientInfoProperties(ctx, req.(*ClientInfoPropertiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_SetClientInfoProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClientInfoProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).SetClientInfoProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/SetClientInfoProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).SetClientInfoProperties(ctx, req.(*ClientInfoProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_ExecuteUnparameterizedStatement_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExecuteUnparameterizedStatementRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProtoInterfaceServer).ExecuteUnparameterizedStatement(m, &protoInterfaceExecuteUnparameterizedStatementServer{stream})
}

type ProtoInterface_ExecuteUnparameterizedStatementServer interface {
	Send(*StatementResponse) error
	grpc.ServerStream
}

type protoInterfaceExecuteUnparameterizedStatementServer struct {
	grpc.ServerStream
}

func (x *protoInterfaceExecuteUnparameterizedStatementServer) Send(m *StatementResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ProtoInterface_ExecuteUnparameterizedStatementBatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExecuteUnparameterizedStatementBatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProtoInterfaceServer).ExecuteUnparameterizedStatementBatch(m, &protoInterfaceExecuteUnparameterizedStatementBatchServer{stream})
}

type ProtoInterface_ExecuteUnparameterizedStatementBatchServer interface {
	Send(*StatementBatchResponse) error
	grpc.ServerStream
}

type protoInterfaceExecuteUnparameterizedStatementBatchServer struct {
	grpc.ServerStream
}

func (x *protoInterfaceExecuteUnparameterizedStatementBatchServer) Send(m *StatementBatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ProtoInterface_PrepareIndexedStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).PrepareIndexedStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/PrepareIndexedStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).PrepareIndexedStatement(ctx, req.(*PrepareStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_ExecuteIndexedStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteIndexedStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).ExecuteIndexedStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/ExecuteIndexedStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).ExecuteIndexedStatement(ctx, req.(*ExecuteIndexedStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_ExecuteIndexedStatementBatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteIndexedStatementBatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).ExecuteIndexedStatementBatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/ExecuteIndexedStatementBatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).ExecuteIndexedStatementBatch(ctx, req.(*ExecuteIndexedStatementBatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_PrepareNamedStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).PrepareNamedStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/PrepareNamedStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).PrepareNamedStatement(ctx, req.(*PrepareStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_ExecuteNamedStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteNamedStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).ExecuteNamedStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/ExecuteNamedStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).ExecuteNamedStatement(ctx, req.(*ExecuteNamedStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_FetchResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).FetchResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/FetchResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).FetchResult(ctx, req.(*FetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_CloseStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).CloseStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/CloseStatement",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).CloseStatement(ctx, req.(*CloseStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_CommitTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).CommitTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/CommitTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).CommitTransaction(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_RollbackTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RollbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).RollbackTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/RollbackTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).RollbackTransaction(ctx, req.(*RollbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoInterface_UpdateConnectionProperties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectionPropertiesUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoInterfaceServer).UpdateConnectionProperties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/polypheny.protointerface.ProtoInterface/UpdateConnectionProperties",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoInterfaceServer).UpdateConnectionProperties(ctx, req.(*ConnectionPropertiesUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProtoInterface_ServiceDesc is the grpc.ServiceDesc for ProtoInterface service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProtoInterface_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "polypheny.protointerface.ProtoInterface",
	HandlerType: (*ProtoInterfaceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDbmsVersion",
			Handler:    _ProtoInterface_GetDbmsVersion_Handler,
		},
		{
			MethodName: "GetSupportedLanguages",
			Handler:    _ProtoInterface_GetSupportedLanguages_Handler,
		},
		{
			MethodName: "GetDatabases",
			Handler:    _ProtoInterface_GetDatabases_Handler,
		},
		{
			MethodName: "GetTableTypes",
			Handler:    _ProtoInterface_GetTableTypes_Handler,
		},
		{
			MethodName: "GetTypes",
			Handler:    _ProtoInterface_GetTypes_Handler,
		},
		{
			MethodName: "GetUserDefinedTypes",
			Handler:    _ProtoInterface_GetUserDefinedTypes_Handler,
		},
		{
			MethodName: "GetClientInfoPropertyMetas",
			Handler:    _ProtoInterface_GetClientInfoPropertyMetas_Handler,
		},
		{
			MethodName: "SearchProcedures",
			Handler:    _ProtoInterface_SearchProcedures_Handler,
		},
		{
			MethodName: "SearchFunctions",
			Handler:    _ProtoInterface_SearchFunctions_Handler,
		},
		{
			MethodName: "SearchNamespaces",
			Handler:    _ProtoInterface_SearchNamespaces_Handler,
		},
		{
			MethodName: "GetNamespace",
			Handler:    _ProtoInterface_GetNamespace_Handler,
		},
		{
			MethodName: "SearchEntities",
			Handler:    _ProtoInterface_SearchEntities_Handler,
		},
		{
			MethodName: "GetSqlStringFunctions",
			Handler:    _ProtoInterface_GetSqlStringFunctions_Handler,
		},
		{
			MethodName: "GetSqlSystemFunctions",
			Handler:    _ProtoInterface_GetSqlSystemFunctions_Handler,
		},
		{
			MethodName: "GetSqlTimeDateFunctions",
			Handler:    _ProtoInterface_GetSqlTimeDateFunctions_Handler,
		},
		{
			MethodName: "GetSqlNumericFunctions",
			Handler:    _ProtoInterface_GetSqlNumericFunctions_Handler,
		},
		{
			MethodName: "GetSqlKeywords",
			Handler:    _ProtoInterface_GetSqlKeywords_Handler,
		},
		{
			MethodName: "Connect",
			Handler:    _ProtoInterface_Connect_Handler,
		},
		{
			MethodName: "CheckConnection",
			Handler:    _ProtoInterface_CheckConnection_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _ProtoInterface_Disconnect_Handler,
		},
		{
			MethodName: "GetClientInfoProperties",
			Handler:    _ProtoInterface_GetClientInfoProperties_Handler,
		},
		{
			MethodName: "SetClientInfoProperties",
			Handler:    _ProtoInterface_SetClientInfoProperties_Handler,
		},
		{
			MethodName: "PrepareIndexedStatement",
			Handler:    _ProtoInterface_PrepareIndexedStatement_Handler,
		},
		{
			MethodName: "ExecuteIndexedStatement",
			Handler:    _ProtoInterface_ExecuteIndexedStatement_Handler,
		},
		{
			MethodName: "ExecuteIndexedStatementBatch",
			Handler:    _ProtoInterface_ExecuteIndexedStatementBatch_Handler,
		},
		{
			MethodName: "PrepareNamedStatement",
			Handler:    _ProtoInterface_PrepareNamedStatement_Handler,
		},
		{
			MethodName: "ExecuteNamedStatement",
			Handler:    _ProtoInterface_ExecuteNamedStatement_Handler,
		},
		{
			MethodName: "FetchResult",
			Handler:    _ProtoInterface_FetchResult_Handler,
		},
		{
			MethodName: "CloseStatement",
			Handler:    _ProtoInterface_CloseStatement_Handler,
		},
		{
			MethodName: "CommitTransaction",
			Handler:    _ProtoInterface_CommitTransaction_Handler,
		},
		{
			MethodName: "RollbackTransaction",
			Handler:    _ProtoInterface_RollbackTransaction_Handler,
		},
		{
			MethodName: "UpdateConnectionProperties",
			Handler:    _ProtoInterface_UpdateConnectionProperties_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ExecuteUnparameterizedStatement",
			Handler:       _ProtoInterface_ExecuteUnparameterizedStatement_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ExecuteUnparameterizedStatementBatch",
			Handler:       _ProtoInterface_ExecuteUnparameterizedStatementBatch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "polyprism/protointerface.proto",
}
