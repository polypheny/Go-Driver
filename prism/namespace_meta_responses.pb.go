//
//Messages related to describing the metadata of namespaces and their entities.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: org/polypheny/prism/namespace_meta_responses.proto

package prism

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The PrimaryKey message provides details about a table’s primary key.
type Column_ColumnType int32

const (
	// The database where the primary key’s table is located.
	Column_UNSPECIFIED Column_ColumnType = 0
	// The namespace or schema of the primary key’s table.
	Column_REGULAR Column_ColumnType = 1
	// The table with this primary key.
	Column_CALCULATED Column_ColumnType = 2
	// The columns that make up the primary key.
	Column_VERSION Column_ColumnType = 3
)

// Enum value maps for Column_ColumnType.
var (
	Column_ColumnType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "REGULAR",
		2: "CALCULATED",
		3: "VERSION",
	}
	Column_ColumnType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"REGULAR":     1,
		"CALCULATED":  2,
		"VERSION":     3,
	}
)

func (x Column_ColumnType) Enum() *Column_ColumnType {
	p := new(Column_ColumnType)
	*p = x
	return p
}

func (x Column_ColumnType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Column_ColumnType) Descriptor() protoreflect.EnumDescriptor {
	return file_org_polypheny_prism_namespace_meta_responses_proto_enumTypes[0].Descriptor()
}

func (Column_ColumnType) Type() protoreflect.EnumType {
	return &file_org_polypheny_prism_namespace_meta_responses_proto_enumTypes[0]
}

func (x Column_ColumnType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Column_ColumnType.Descriptor instead.
func (Column_ColumnType) EnumDescriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{5, 0}
}

// The NamespacesResponse message delivers a list of namespaces based on the provided criteria in the NamespacesRequest.
type NamespacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of Namespace messages containing information about each namespace that matches the search criteria.
	Namespaces []*Namespace `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *NamespacesResponse) Reset() {
	*x = NamespacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacesResponse) ProtoMessage() {}

func (x *NamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacesResponse.ProtoReflect.Descriptor instead.
func (*NamespacesResponse) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{0}
}

func (x *NamespacesResponse) GetNamespaces() []*Namespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

// The EntitiesResponse message returns a list of entities that match the provided criteria from the EntitiesRequest.
type EntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of Entity messages containing information about each entity within the requested namespace.
	Entities []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *EntitiesResponse) Reset() {
	*x = EntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitiesResponse) ProtoMessage() {}

func (x *EntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitiesResponse.ProtoReflect.Descriptor instead.
func (*EntitiesResponse) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{1}
}

func (x *EntitiesResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

// The Namespace message provides detailed information about a specific namespace.
type Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the namespace.
	NamespaceName string `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// Indicates if the namespace name is case sensitive.
	IsCaseSensitive bool `protobuf:"varint,4,opt,name=is_case_sensitive,json=isCaseSensitive,proto3" json:"is_case_sensitive,omitempty"`
	// An optional field providing the type of the namespace, if applicable.
	NamespaceType *string `protobuf:"bytes,5,opt,name=namespace_type,json=namespaceType,proto3,oneof" json:"namespace_type,omitempty"`
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{2}
}

func (x *Namespace) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Namespace) GetIsCaseSensitive() bool {
	if x != nil {
		return x.IsCaseSensitive
	}
	return false
}

func (x *Namespace) GetNamespaceType() string {
	if x != nil && x.NamespaceType != nil {
		return *x.NamespaceType
	}
	return ""
}

// The Entity message acts as a generic wrapper for different of entities metadata messages.
// Only one of the entities metadata fields can be set for a given message instance.
// Different entity metadata messages are used to represent the metadata of different entity types.
// The available entity metadata messages are, Table for relational entities, Graph for labeled property graph entities and
// Document for entities in the document model.
type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Entity:
	//
	//	*Entity_Table
	//	*Entity_Graph
	//	*Entity_Document
	Entity isEntity_Entity `protobuf_oneof:"Entity"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{3}
}

func (m *Entity) GetEntity() isEntity_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *Entity) GetTable() *Table {
	if x, ok := x.GetEntity().(*Entity_Table); ok {
		return x.Table
	}
	return nil
}

func (x *Entity) GetGraph() *Graph {
	if x, ok := x.GetEntity().(*Entity_Graph); ok {
		return x.Graph
	}
	return nil
}

func (x *Entity) GetDocument() *Document {
	if x, ok := x.GetEntity().(*Entity_Document); ok {
		return x.Document
	}
	return nil
}

type isEntity_Entity interface {
	isEntity_Entity()
}

type Entity_Table struct {
	// An entity of type Table.
	Table *Table `protobuf:"bytes,1,opt,name=table,proto3,oneof"`
}

type Entity_Graph struct {
	// An entity of type Graph.
	Graph *Graph `protobuf:"bytes,2,opt,name=graph,proto3,oneof"`
}

type Entity_Document struct {
	// An entity of type Document.
	Document *Document `protobuf:"bytes,3,opt,name=document,proto3,oneof"` // add other entities known in other models
}

func (*Entity_Table) isEntity_Entity() {}

func (*Entity_Graph) isEntity_Entity() {}

func (*Entity_Document) isEntity_Entity() {}

// The Table message provides comprehensive information about a specific table within a database.
type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace or schema where the table is located.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The name of the table.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The type of the table (e.g., BASE TABLE, VIEW).
	TableType string `protobuf:"bytes,4,opt,name=table_type,json=tableType,proto3" json:"table_type,omitempty"`
	// A list of Column messages providing information about each column in the table.
	Columns []*Column `protobuf:"bytes,6,rep,name=columns,proto3" json:"columns,omitempty"`
	// An optional PrimaryKey message, providing details about the primary key of the table.
	PrimaryKey *PrimaryKey `protobuf:"bytes,7,opt,name=primary_key,json=primaryKey,proto3,oneof" json:"primary_key,omitempty"`
	// A list of ForeignKey messages detailing the foreign keys associated with the table.
	ForeignKeys []*ForeignKey `protobuf:"bytes,8,rep,name=foreign_keys,json=foreignKeys,proto3" json:"foreign_keys,omitempty"`
	// A list of ForeignKey messages detailing the keys in other tables that reference this table.
	ExportedKeys []*ForeignKey `protobuf:"bytes,9,rep,name=exported_keys,json=exportedKeys,proto3" json:"exported_keys,omitempty"`
	// A list of Index messages detailing the indexes defined on the table.
	Indexes []*Index `protobuf:"bytes,10,rep,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{4}
}

func (x *Table) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Table) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Table) GetTableType() string {
	if x != nil {
		return x.TableType
	}
	return ""
}

func (x *Table) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Table) GetPrimaryKey() *PrimaryKey {
	if x != nil {
		return x.PrimaryKey
	}
	return nil
}

func (x *Table) GetForeignKeys() []*ForeignKey {
	if x != nil {
		return x.ForeignKeys
	}
	return nil
}

func (x *Table) GetExportedKeys() []*ForeignKey {
	if x != nil {
		return x.ExportedKeys
	}
	return nil
}

func (x *Table) GetIndexes() []*Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

// The Column message describes the attributes of a specific column within a table.
type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace or schema of the column’s table.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table to which this column belongs.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The name of the column.
	ColumnName string `protobuf:"bytes,4,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	// The data type of the column.
	TypeName string `protobuf:"bytes,5,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	// The length or size of the column type, if applicable.
	TypeLength *int32 `protobuf:"varint,6,opt,name=type_length,json=typeLength,proto3,oneof" json:"type_length,omitempty"`
	// The scale of the column type, if applicable.
	TypeScale *int32 `protobuf:"varint,7,opt,name=type_scale,json=typeScale,proto3,oneof" json:"type_scale,omitempty"`
	// Indicates if the column can contain null values.
	IsNullable bool `protobuf:"varint,8,opt,name=is_nullable,json=isNullable,proto3" json:"is_nullable,omitempty"`
	// The default value of the column, represented as a string.
	DefaultValueAsString *string `protobuf:"bytes,9,opt,name=default_value_as_string,json=defaultValueAsString,proto3,oneof" json:"default_value_as_string,omitempty"`
	// The positional index of the column in the table.
	ColumnIndex int32 `protobuf:"varint,10,opt,name=column_index,json=columnIndex,proto3" json:"column_index,omitempty"`
	// The collation name for the column, if applicable.
	Collation *string `protobuf:"bytes,11,opt,name=collation,proto3,oneof" json:"collation,omitempty"`
	// Indicates if the column is hidden.
	IsHidden bool `protobuf:"varint,12,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	// An enumeration indicating the type of column (e.g., REGULAR, CALCULATED, VERSION).
	ColumnType Column_ColumnType `protobuf:"varint,13,opt,name=column_type,json=columnType,proto3,enum=org.polypheny.prism.Column_ColumnType" json:"column_type,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{5}
}

func (x *Column) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Column) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Column) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *Column) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Column) GetTypeLength() int32 {
	if x != nil && x.TypeLength != nil {
		return *x.TypeLength
	}
	return 0
}

func (x *Column) GetTypeScale() int32 {
	if x != nil && x.TypeScale != nil {
		return *x.TypeScale
	}
	return 0
}

func (x *Column) GetIsNullable() bool {
	if x != nil {
		return x.IsNullable
	}
	return false
}

func (x *Column) GetDefaultValueAsString() string {
	if x != nil && x.DefaultValueAsString != nil {
		return *x.DefaultValueAsString
	}
	return ""
}

func (x *Column) GetColumnIndex() int32 {
	if x != nil {
		return x.ColumnIndex
	}
	return 0
}

func (x *Column) GetCollation() string {
	if x != nil && x.Collation != nil {
		return *x.Collation
	}
	return ""
}

func (x *Column) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *Column) GetColumnType() Column_ColumnType {
	if x != nil {
		return x.ColumnType
	}
	return Column_UNSPECIFIED
}

// The PrimaryKey message provides details about a table’s primary key.
type PrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The database where the primary key’s table is located.
	DatabaseName string `protobuf:"bytes,1,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	// The namespace or schema of the primary key’s table.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table with this primary key.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// The columns that make up the primary key.
	Columns []*Column `protobuf:"bytes,4,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *PrimaryKey) Reset() {
	*x = PrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryKey) ProtoMessage() {}

func (x *PrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryKey.ProtoReflect.Descriptor instead.
func (*PrimaryKey) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{6}
}

func (x *PrimaryKey) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *PrimaryKey) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *PrimaryKey) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *PrimaryKey) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

// The ForeignKey message details a foreign key relationship between tables, providing information about the linkage between a table's column(s) and the column(s) of another table it references.
// This relationship is crucial for maintaining referential integrity within the database.
type ForeignKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace or schema of the referenced table.
	// This indicates the specific namespace or schema within the database where the referenced table resides.
	ReferencedNamespaceName *string `protobuf:"bytes,2,opt,name=referenced_namespace_name,json=referencedNamespaceName,proto3,oneof" json:"referenced_namespace_name,omitempty"`
	// The table being referenced by the foreign key.
	// This field identifies the target table that contains the referenced columns.
	ReferencedTableName string `protobuf:"bytes,3,opt,name=referenced_table_name,json=referencedTableName,proto3" json:"referenced_table_name,omitempty"`
	// The columns in the referenced table. These are the columns in the referenced table that the foreign key points to.
	ReferencedColumns []*Column `protobuf:"bytes,4,rep,name=referenced_columns,json=referencedColumns,proto3" json:"referenced_columns,omitempty"`
	// The columns in the current table that make up the foreign key.
	// These columns in the table contain the foreign key constraint reference the corresponding columns in the referenced table.
	ForeignColumns []*Column `protobuf:"bytes,8,rep,name=foreign_columns,json=foreignColumns,proto3" json:"foreign_columns,omitempty"`
	// A numeric representation of the action taken when a referenced row is updated.
	// This rule determines how changes to the referenced columns affect the rows that hold the foreign key.
	UpdateRule int32 `protobuf:"varint,10,opt,name=update_rule,json=updateRule,proto3" json:"update_rule,omitempty"`
	// A numeric representation of the action taken when a referenced row is deleted.
	// Similar to the update rule, this defines the behavior of the foreign key relationship when rows in the referenced table are deleted.
	DeleteRule int32 `protobuf:"varint,11,opt,name=delete_rule,json=deleteRule,proto3" json:"delete_rule,omitempty"`
	// An optional name for the foreign key constraint.
	// This allows for the naming of the foreign key constraint for easier reference and management within the database.
	KeyName *string `protobuf:"bytes,12,opt,name=key_name,json=keyName,proto3,oneof" json:"key_name,omitempty"`
}

func (x *ForeignKey) Reset() {
	*x = ForeignKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForeignKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForeignKey) ProtoMessage() {}

func (x *ForeignKey) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForeignKey.ProtoReflect.Descriptor instead.
func (*ForeignKey) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{7}
}

func (x *ForeignKey) GetReferencedNamespaceName() string {
	if x != nil && x.ReferencedNamespaceName != nil {
		return *x.ReferencedNamespaceName
	}
	return ""
}

func (x *ForeignKey) GetReferencedTableName() string {
	if x != nil {
		return x.ReferencedTableName
	}
	return ""
}

func (x *ForeignKey) GetReferencedColumns() []*Column {
	if x != nil {
		return x.ReferencedColumns
	}
	return nil
}

func (x *ForeignKey) GetForeignColumns() []*Column {
	if x != nil {
		return x.ForeignColumns
	}
	return nil
}

func (x *ForeignKey) GetUpdateRule() int32 {
	if x != nil {
		return x.UpdateRule
	}
	return 0
}

func (x *ForeignKey) GetDeleteRule() int32 {
	if x != nil {
		return x.DeleteRule
	}
	return 0
}

func (x *ForeignKey) GetKeyName() string {
	if x != nil && x.KeyName != nil {
		return *x.KeyName
	}
	return ""
}

// The Index message provides details about an index defined on a table. Indexes are crucial for improving the performance of data retrieval operations by effectively organizing the data stored in a database table. This message includes information about the index's database, namespace (or schema), table, uniqueness, name, columns involved, physical location, and type.
type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace or schema of the indexed table.
	// This indicates the specific namespace or schema within the database where the indexed table resides.
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	// The table on which the index is defined.
	// This field identifies the specific table within the namespace that the index belongs to.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Indicates if the index enforces unique values.
	// A boolean value where true means the index ensures that all values in the index are unique.
	Unique bool `protobuf:"varint,4,opt,name=unique,proto3" json:"unique,omitempty"`
	// The name of the index.
	// This allows for the naming of the index for easier reference and management within the database.
	IndexName string `protobuf:"bytes,5,opt,name=index_name,json=indexName,proto3" json:"index_name,omitempty"`
	// The columns that are part of the index.
	// This repeated field lists all the columns included in the index, defining the order and structure of the index.
	Columns []*Column `protobuf:"bytes,6,rep,name=columns,proto3" json:"columns,omitempty"`
	// A numeric identifier representing the location or storage of the index.
	// This field is used to identify where the index is physically stored within the database system, if applicable.
	Location int64 `protobuf:"varint,8,opt,name=location,proto3" json:"location,omitempty"`
	// A numeric representation indicating the type or mechanism of the index.
	// This could represent different types of indexing strategies used by the database system, such as B-tree, hash, etc.
	IndexType int32 `protobuf:"varint,9,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{8}
}

func (x *Index) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *Index) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *Index) GetUnique() bool {
	if x != nil {
		return x.Unique
	}
	return false
}

func (x *Index) GetIndexName() string {
	if x != nil {
		return x.IndexName
	}
	return ""
}

func (x *Index) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Index) GetLocation() int64 {
	if x != nil {
		return x.Location
	}
	return 0
}

func (x *Index) GetIndexType() int32 {
	if x != nil {
		return x.IndexType
	}
	return 0
}

// The Graph message will be used to represent the metadata of a graph entity.
// As of now, the structure is empty but it is expected to encapsulate various attributes and details about graph entities in the future.
// As of now, the Graph message is a placeholder and does not contain any fields.
type Graph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Graph) Reset() {
	*x = Graph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Graph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Graph) ProtoMessage() {}

func (x *Graph) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Graph.ProtoReflect.Descriptor instead.
func (*Graph) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{9}
}

// The Document message will be used to encapsulate the metadata related to a document entity.
// The structure is presently empty, but it’s expected to be expanded with attributes pertinent to documents in future updates.
// At this moment, the Document message serves as a placeholder and does not possess any fields.
type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP(), []int{10}
}

var File_org_polypheny_prism_namespace_meta_responses_proto protoreflect.FileDescriptor

var file_org_polypheny_prism_namespace_meta_responses_proto_rawDesc = []byte{
	0x0a, 0x32, 0x6f, 0x72, 0x67, 0x2f, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2f,
	0x70, 0x72, 0x69, 0x73, 0x6d, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68,
	0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x22, 0x54, 0x0a, 0x12, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68,
	0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22,
	0x4b, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79,
	0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x9d, 0x01, 0x0a,
	0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73,
	0x43, 0x61, 0x73, 0x65, 0x53, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2a, 0x0a,
	0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb7, 0x01, 0x0a,
	0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c,
	0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x67,
	0x72, 0x61, 0x70, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d,
	0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12,
	0x3b, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xba, 0x03, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c,
	0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x0b,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b,
	0x65, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79,
	0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e,
	0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x69, 0x73, 0x6d, 0x2e, 0x46, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x52,
	0x0c, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x34, 0x0a,
	0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x69, 0x73, 0x6d, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6b, 0x65, 0x79, 0x22, 0xf1, 0x04, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x09,
	0x74, 0x79, 0x70, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x4e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3a, 0x0a,
	0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x61,
	0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x73,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x09,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x47, 0x0a, 0x0b,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x10,
	0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4c, 0x43, 0x55, 0x4c, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x1a, 0x0a,
	0x18, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x61, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52,
	0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0xa0, 0x03, 0x0a, 0x0a, 0x46, 0x6f, 0x72,
	0x65, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x19, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x12,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70,
	0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x65,
	0x69, 0x67, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x0e,
	0x66, 0x6f, 0x72, 0x65, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xf6, 0x01, 0x0a, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68,
	0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x47, 0x72, 0x61, 0x70, 0x68, 0x22, 0x0a, 0x0a,
	0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x5c, 0x0a, 0x13, 0x6f, 0x72, 0x67,
	0x2e, 0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x69, 0x73, 0x6d,
	0x42, 0x16, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x50, 0x01, 0x5a, 0x19, 0x6f, 0x72, 0x67, 0x2f,
	0x70, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e, 0x79, 0x2f, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x3b,
	0x70, 0x72, 0x69, 0x73, 0x6d, 0xaa, 0x02, 0x0f, 0x50, 0x6f, 0x6c, 0x79, 0x70, 0x68, 0x65, 0x6e,
	0x79, 0x2e, 0x50, 0x72, 0x69, 0x73, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_org_polypheny_prism_namespace_meta_responses_proto_rawDescOnce sync.Once
	file_org_polypheny_prism_namespace_meta_responses_proto_rawDescData = file_org_polypheny_prism_namespace_meta_responses_proto_rawDesc
)

func file_org_polypheny_prism_namespace_meta_responses_proto_rawDescGZIP() []byte {
	file_org_polypheny_prism_namespace_meta_responses_proto_rawDescOnce.Do(func() {
		file_org_polypheny_prism_namespace_meta_responses_proto_rawDescData = protoimpl.X.CompressGZIP(file_org_polypheny_prism_namespace_meta_responses_proto_rawDescData)
	})
	return file_org_polypheny_prism_namespace_meta_responses_proto_rawDescData
}

var file_org_polypheny_prism_namespace_meta_responses_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_org_polypheny_prism_namespace_meta_responses_proto_goTypes = []any{
	(Column_ColumnType)(0),     // 0: org.polypheny.prism.Column.ColumnType
	(*NamespacesResponse)(nil), // 1: org.polypheny.prism.NamespacesResponse
	(*EntitiesResponse)(nil),   // 2: org.polypheny.prism.EntitiesResponse
	(*Namespace)(nil),          // 3: org.polypheny.prism.Namespace
	(*Entity)(nil),             // 4: org.polypheny.prism.Entity
	(*Table)(nil),              // 5: org.polypheny.prism.Table
	(*Column)(nil),             // 6: org.polypheny.prism.Column
	(*PrimaryKey)(nil),         // 7: org.polypheny.prism.PrimaryKey
	(*ForeignKey)(nil),         // 8: org.polypheny.prism.ForeignKey
	(*Index)(nil),              // 9: org.polypheny.prism.Index
	(*Graph)(nil),              // 10: org.polypheny.prism.Graph
	(*Document)(nil),           // 11: org.polypheny.prism.Document
}
var file_org_polypheny_prism_namespace_meta_responses_proto_depIdxs = []int32{
	3,  // 0: org.polypheny.prism.NamespacesResponse.namespaces:type_name -> org.polypheny.prism.Namespace
	4,  // 1: org.polypheny.prism.EntitiesResponse.entities:type_name -> org.polypheny.prism.Entity
	5,  // 2: org.polypheny.prism.Entity.table:type_name -> org.polypheny.prism.Table
	10, // 3: org.polypheny.prism.Entity.graph:type_name -> org.polypheny.prism.Graph
	11, // 4: org.polypheny.prism.Entity.document:type_name -> org.polypheny.prism.Document
	6,  // 5: org.polypheny.prism.Table.columns:type_name -> org.polypheny.prism.Column
	7,  // 6: org.polypheny.prism.Table.primary_key:type_name -> org.polypheny.prism.PrimaryKey
	8,  // 7: org.polypheny.prism.Table.foreign_keys:type_name -> org.polypheny.prism.ForeignKey
	8,  // 8: org.polypheny.prism.Table.exported_keys:type_name -> org.polypheny.prism.ForeignKey
	9,  // 9: org.polypheny.prism.Table.indexes:type_name -> org.polypheny.prism.Index
	0,  // 10: org.polypheny.prism.Column.column_type:type_name -> org.polypheny.prism.Column.ColumnType
	6,  // 11: org.polypheny.prism.PrimaryKey.columns:type_name -> org.polypheny.prism.Column
	6,  // 12: org.polypheny.prism.ForeignKey.referenced_columns:type_name -> org.polypheny.prism.Column
	6,  // 13: org.polypheny.prism.ForeignKey.foreign_columns:type_name -> org.polypheny.prism.Column
	6,  // 14: org.polypheny.prism.Index.columns:type_name -> org.polypheny.prism.Column
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_org_polypheny_prism_namespace_meta_responses_proto_init() }
func file_org_polypheny_prism_namespace_meta_responses_proto_init() {
	if File_org_polypheny_prism_namespace_meta_responses_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NamespacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*EntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ForeignKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Graph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[2].OneofWrappers = []any{}
	file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[3].OneofWrappers = []any{
		(*Entity_Table)(nil),
		(*Entity_Graph)(nil),
		(*Entity_Document)(nil),
	}
	file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[4].OneofWrappers = []any{}
	file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[5].OneofWrappers = []any{}
	file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_org_polypheny_prism_namespace_meta_responses_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_org_polypheny_prism_namespace_meta_responses_proto_goTypes,
		DependencyIndexes: file_org_polypheny_prism_namespace_meta_responses_proto_depIdxs,
		EnumInfos:         file_org_polypheny_prism_namespace_meta_responses_proto_enumTypes,
		MessageInfos:      file_org_polypheny_prism_namespace_meta_responses_proto_msgTypes,
	}.Build()
	File_org_polypheny_prism_namespace_meta_responses_proto = out.File
	file_org_polypheny_prism_namespace_meta_responses_proto_rawDesc = nil
	file_org_polypheny_prism_namespace_meta_responses_proto_goTypes = nil
	file_org_polypheny_prism_namespace_meta_responses_proto_depIdxs = nil
}
